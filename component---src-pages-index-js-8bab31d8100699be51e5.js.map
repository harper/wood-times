{"version":3,"file":"component---src-pages-index-js-8bab31d8100699be51e5.js","mappings":"8MA4EA,EAhEY,WAAO,IAADA,EAkBVC,EAA+B,QAAzBD,GAjBCE,EAAAA,EAAAA,gBAAe,cAiBRC,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBC,OAGvC,OACEI,EAAAA,cAAA,OAAKC,UAAU,YACbD,EAAAA,cAACE,EAAAA,EAAW,CACVD,UAAU,aACVE,OAAO,QACPC,QAAS,CAAC,OAAQ,OAAQ,QAC1BC,IAAI,4BACJC,MAAO,GACPC,OAAQ,GACRC,QAAS,GACTC,IAAI,kBAAiBC,YAAAC,EAAA,SAEtBf,aAAM,EAANA,EAAQgB,OACPZ,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,KAAGC,UAAU,8BAA6B,mBACvBL,EAAOgB,KAAK,MAAGhB,aAAM,EAANA,EAAQiB,UAAW,KAAK,cACxDb,EAAAA,cAACc,EAAAA,KAAI,CACHC,GAAG,yBACHd,UAAU,2BACVe,MAAM,+BAENhB,EAAAA,cAAA,OACEiB,MAAM,6BACNC,KAAK,OACLC,QAAQ,YACRC,OAAO,eACPnB,UAAU,OAEVD,EAAAA,cAAA,QACEqB,cAAc,QACdC,eAAe,QACfC,YAAa,EACbC,EAAE,kEASpB,E,oBCRA,EA3DkB,SAAHC,GAA4B,IAAD9B,EAArB+B,EAAID,EAAJC,KAAMC,EAAQF,EAARE,SACnBC,GAAkC,QAAtBjC,EAAA+B,EAAK5B,KAAKC,oBAAY,IAAAJ,OAAA,EAAtBA,EAAwBqB,QAAK,QACzCa,EAAQH,EAAKI,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAENhC,EAAAA,cAACiC,EAAAA,EAAM,CAACN,SAAUA,EAAUX,MAAOY,GACjC5B,EAAAA,cAACkC,EAAAA,EAAG,CAAClB,MAAM,cACXhB,EAAAA,cAACmC,EAAG,MACJnC,EAAAA,cAAA,SAAG,yBAMPA,EAAAA,cAACiC,EAAAA,EAAM,CAACN,SAAUA,EAAUX,MAAOY,GACjC5B,EAAAA,cAACkC,EAAAA,EAAG,CAAClB,MAAM,cACXhB,EAAAA,cAACmC,EAAG,MACJnC,EAAAA,cAAA,MAAIoC,MAAO,CAAEC,UAAU,SACpBR,EAAMS,KAAI,SAAAC,GACT,IAAMvB,EAAQuB,EAAKC,YAAYxB,OAASuB,EAAKE,OAAOC,KAEpD,OACE1C,EAAAA,cAAA,MACEC,UAAU,oDACV0C,IAAKJ,EAAKE,OAAOC,MAEjB1C,EAAAA,cAACc,EAAAA,KAAI,CAACC,GAAIwB,EAAKE,OAAOC,KAAME,SAAS,OACnC5C,EAAAA,cAAA,WACEC,UAAU,sBACV4C,WAAS,EACTC,SAAS,6BAET9C,EAAAA,cAAA,cACEA,EAAAA,cAAA,MAAIC,UAAU,QACZD,EAAAA,cAAA,QAAM4C,SAAS,YAAY5B,IAE7BhB,EAAAA,cAAA,SAAOC,UAAU,2BACdsC,EAAKC,YAAYO,OAGtB/C,EAAAA,cAAA,eACEA,EAAAA,cAAA,KACEgD,wBAAyB,CACvBC,OAAQV,EAAKC,YAAYU,aAAeX,EAAKY,SAE/CP,SAAS,mBAOvB,KAIR,C","sources":["webpack://gatsby-starter-blog/./src/components/bio.js","webpack://gatsby-starter-blog/./src/pages/index.js"],"sourcesContent":["/**\n * Bio component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { StaticImage } from \"gatsby-plugin-image\"\nimport { Link } from \"gatsby\"\n\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n          social {\n            twitter\n          }\n        }\n      }\n    }\n  `)\n\n  // Set these values by editing \"siteMetadata\" in gatsby-config.js\n  const author = data.site.siteMetadata?.author\n  //const social = data.site.siteMetadata?.social\n\n  return (\n    <div className=\"bio mb-8\">\n      <StaticImage\n        className=\"bio-avatar\"\n        layout=\"fixed\"\n        formats={[\"AUTO\", \"WEBP\", \"AVIF\"]}\n        src=\"../images/profile-pic.png\"\n        width={50}\n        height={50}\n        quality={95}\n        alt=\"Profile picture\"\n      />\n      {author?.name && (\n        <>\n          <p className=\"pt-3 text-lg text-gray-700\">\n            Shop stories by {author.name}, {author?.summary || null} Start here\n            <Link\n              to=\"001-making-with-atoms/\"\n              className=\"p2 float-right mt-1 ml-1\"\n              title=\"new to the site? start here\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                fill=\"none\"\n                viewBox=\"0 0 24 24\"\n                stroke=\"currentColor\"\n                className=\"h-4\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M13 9l3 3m0 0l-3 3m3-3H8m13 0a9 9 0 11-18 0 9 9 0 0118 0z\"\n                />\n              </svg>\n            </Link>\n          </p>\n        </>\n      )}\n    </div>\n  )\n}\n\nexport default Bio\n","import * as React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <Bio />\n        <p>No blog posts found.</p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <Bio />\n      <ol style={{ listStyle: `none` }}>\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li\n              className=\"bg-white rounded-xl p-8 shadow-md hover:shadow-lg\"\n              key={post.fields.slug}\n            >\n              <Link to={post.fields.slug} itemProp=\"url\">\n                <article\n                  className=\"post-list-item mt-0\"\n                  itemScope\n                  itemType=\"http://schema.org/Article\"\n                >\n                  <header>\n                    <h2 className=\"mb-0\">\n                      <span itemProp=\"headline\">{title}</span>\n                    </h2>\n                    <small className=\"text-base text-gray-500\">\n                      {post.frontmatter.date}\n                    </small>\n                  </header>\n                  <section>\n                    <p\n                      dangerouslySetInnerHTML={{\n                        __html: post.frontmatter.description || post.excerpt,\n                      }}\n                      itemProp=\"description\"\n                    />\n                  </section>\n                </article>\n              </Link>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date(formatString: \"MMMM DD, YYYY\")\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"names":["_data$site$siteMetada","author","useStaticQuery","site","siteMetadata","React","className","StaticImage","layout","formats","src","width","height","quality","alt","__imageData","require","name","summary","Link","to","title","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","_ref","data","location","siteTitle","posts","allMarkdownRemark","nodes","length","Layout","SEO","Bio","style","listStyle","map","post","frontmatter","fields","slug","key","itemProp","itemScope","itemType","date","dangerouslySetInnerHTML","__html","description","excerpt"],"sourceRoot":""}